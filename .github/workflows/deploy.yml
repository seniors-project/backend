# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

#name: Java CI with Gradle
#
#on:
#  push:
#    branches: [ "main" ]
#
#permissions:
#  contents: read
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: checkout
#        uses: actions/checkout@v3
#
#      # JDK를 17 버전으로 세팅
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      # Gradle 캐싱-> 빌드 속도 UP
#      - name: Gradle caching
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      # application.yml 파일 생성
#      - name: make application.yaml
#        run: |
#          cd ./src/main/resources
#          touch ./application.yml
#          echo "${{ secrets.APPLICATION }}" > ./application.yml
#        shell: bash
#
#      # Gradle로 빌드 실행
#      - name: Build with Gradle
#        run: ./gradlew bootJar
#
#      # image로부터 Metadata 추출
#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
#          tags: |
#            type=sha
#
#      # image 빌드 및 도커허브에 push
#      - name: web docker build and push
#        run: |
#          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
#          docker build -t ${{ secrets.DOCKER_REPO }}/seniors:${{ steps.meta.outputs.version }} .
#          docker push ${{ secrets.DOCKER_REPO }}/seniors:${{ steps.meta.outputs.version }}
#
#      # manifest file 존재하는 Repository clone and checkout
#      - name: Clone and Checkout to config Repository
#        uses: actions/checkout@v3
#        with:
#          repository: seniors-project/backend-config
#          token: ${{ secrets.HELMREPO }}
#
#      # yq 사용해 yaml file edit
#      - name: Change config repo values.yaml
#        uses: mikefarah/yq@master
#        with:
#          cmd: yq -i '.image.tag = "${{ steps.meta.outputs.version }}"' seniors/values.yaml
#
#      # config repo의 image version update
#      - name: Pushes to config repository
#        uses: cpina/github-action-push-to-another-repository@main
#        env:
#          API_TOKEN_GITHUB: ${{ secrets.HELMREPO }}
#        with:
#          source-directory: "."
#          destination-github-username: "seniors-project"
#          destination-repository-name: "backend-config"
#          user-email: strangehoon2@gmail.com
#          target-branch: main
#          commit-message: "Update Image version to ${{ steps.meta.outputs.version  }}"

